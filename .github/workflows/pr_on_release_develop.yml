name: PR to release or develop branch

on:
  pull_request:
    branches:
      - 'develop'
      - 'release-*'
    types:
      - closed  

jobs:
  frontend_tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.2'

    - name: Install Dependencies
      run: npm ci

#    - name: Run Tests
#      run: npm test

  build_frontend_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker 
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to DockerHub
      uses: docker/build-push-action@v4
      with:
        context: ./
        push: true
        tags: teamoctopus/octopus_frontend_dev:latest      

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_frontend_and_push_to_docker_hub   
    steps:
      - name: Executing remote ssh command to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd octopus_dev
            sudo docker-compose -f docker-compose.dev.yml pull
            sudo docker-compose -f docker-compose.dev.yml down
            sudo docker-compose -f docker-compose.dev.yml up -d

  send_notification:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependences
      run: pip install requests argparse

    - name: Send custom message
      run: |
        python send_telegram_message.py \
          --bot_token "${{ secrets.TELEGRAM_TOKEN }}" \
          --chat_id "${{ secrets.TELEGRAM_TO }}" \
          --message_thread_id "${{ secrets.CHAT_THREAD }}" \
          --actor "${{ github.actor }}" \
          --message "${{ github.event.commits[0].message }}" \
          --repository "${{ github.repository }}" \
          --commit_url "https://github.com/${{ github.repository }}/commit/${{ github.sha }}" \
          --info "ðŸ‘Œ Deployment successfully completed!" \
          --pr_title "${{ github.event.pull_request.title }}" \
          --pr_number "${{ github.event.pull_request.number }}" \
          --pr_author "${{ github.event.pull_request.user.login }}" \
          --pr_base_branch "${{ github.event.pull_request.base.ref }}" \
          --pr_head_branch "${{ github.event.pull_request.head.ref }}" \
          --pr_url "${{ github.event.pull_request.html_url }}"